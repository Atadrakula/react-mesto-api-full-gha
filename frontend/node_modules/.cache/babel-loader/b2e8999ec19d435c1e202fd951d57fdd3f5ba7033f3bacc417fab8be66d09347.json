{"ast":null,"code":"class Authentication {\n  constructor(_ref) {\n    let {\n      url,\n      headers,\n      headersAuth\n    } = _ref;\n    this._generalUrl = url;\n    this._headers = headers;\n    this._headersWithAuth = headersAuth;\n  }\n  _checkResponse(response) {\n    if (!response.ok) {\n      return Promise.reject(`Ошибка: ${response.status}`);\n    }\n    return response.json();\n  }\n  _request(endpoint, headers, options) {\n    return fetch(`${this._generalUrl}${endpoint}`, {\n      ...options,\n      headers: headers\n    }).then(this._checkResponse);\n  }\n  pushRegistration(data) {\n    this._request('/signup', this._headers, {\n      method: 'POST',\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    });\n  }\n}\nconst serverConfig = {\n  url: 'https://auth.nomoreparties.co',\n  headersAuth: {\n    authorization: '608096ab-91fa-4cd3-8368-f20c618391fd',\n    'Content-Type': 'application/json'\n  },\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst authenticationApi = new Authentication(serverConfig);\nexport default authenticationApi;","map":{"version":3,"names":["Authentication","constructor","_ref","url","headers","headersAuth","_generalUrl","_headers","_headersWithAuth","_checkResponse","response","ok","Promise","reject","status","json","_request","endpoint","options","fetch","then","pushRegistration","data","method","body","JSON","stringify","password","email","serverConfig","authorization","authenticationApi"],"sources":["C:/Users/Администратор/Desktop/Study/dev/twelve-project/mesto-react/src/utils/Authentication.js"],"sourcesContent":["class Authentication {\n  constructor({ url, headers, headersAuth }) {\n    this._generalUrl = url;\n    this._headers = headers;\n    this._headersWithAuth = headersAuth;\n  }\n\n  _checkResponse(response) {\n    if (!response.ok) {\n      return Promise.reject(`Ошибка: ${response.status}`);\n    }\n    return response.json();\n  }\n\n  _request(endpoint, headers, options) {\n    return fetch(`${this._generalUrl}${endpoint}`, { ...options, headers: headers }).then(this._checkResponse);\n  }\n\n  pushRegistration(data) {\n    this._request('/signup', this._headers, {\n      method: 'POST',\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    });\n  }\n\n\n\n}\n\nconst serverConfig = {\n  url: 'https://auth.nomoreparties.co',\n  headersAuth: {\n    authorization: '608096ab-91fa-4cd3-8368-f20c618391fd',\n    'Content-Type': 'application/json'\n  },\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst authenticationApi = new Authentication(serverConfig);\n\nexport default authenticationApi;\n"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAAAC,IAAA,EAAgC;IAAA,IAA/B;MAAEC,GAAG;MAAEC,OAAO;MAAEC;IAAY,CAAC,GAAAH,IAAA;IACvC,IAAI,CAACI,WAAW,GAAGH,GAAG;IACtB,IAAI,CAACI,QAAQ,GAAGH,OAAO;IACvB,IAAI,CAACI,gBAAgB,GAAGH,WAAW;EACrC;EAEAI,cAAcA,CAACC,QAAQ,EAAE;IACvB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,QAAQ,CAACI,MAAO,EAAC,CAAC;IACrD;IACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB;EAEAC,QAAQA,CAACC,QAAQ,EAAEb,OAAO,EAAEc,OAAO,EAAE;IACnC,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,WAAY,GAAEW,QAAS,EAAC,EAAE;MAAE,GAAGC,OAAO;MAAEd,OAAO,EAAEA;IAAQ,CAAC,CAAC,CAACgB,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAC5G;EAEAY,gBAAgBA,CAACC,IAAI,EAAE;IACrB,IAAI,CAACN,QAAQ,CAAC,SAAS,EAAE,IAAI,CAACT,QAAQ,EAAE;MACtCgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBC,KAAK,EAAEN,IAAI,CAACM;MACd,CAAC;IACH,CAAC,CAAC;EACJ;AAIF;AAEA,MAAMC,YAAY,GAAG;EACnB1B,GAAG,EAAE,+BAA+B;EACpCE,WAAW,EAAE;IACXyB,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB,CAAC;EACD1B,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC;AAED,MAAM2B,iBAAiB,GAAG,IAAI/B,cAAc,CAAC6B,YAAY,CAAC;AAE1D,eAAeE,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}