{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._generalUrl = url;\n    this._headers = headers;\n  }\n  _checkResponse(response) {\n    if (!response.ok) {\n      return Promise.reject(`Ошибка: ${response.status}`);\n    }\n    return response.json();\n  }\n  _request(endpoint, options) {\n    return fetch(`${this._generalUrl}${endpoint}`, {\n      ...options,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  pullProfileInfo() {\n    return this._request(`/users/me`);\n  }\n  pullCardInfo() {\n    return this._request(`/cards`);\n  }\n  patchProfileInfo(data) {\n    return this._request(`/users/me`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: data.username,\n        about: data.useractivity\n      })\n    });\n  }\n  pushCardInfo(data) {\n    return this._request(`/cards`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._request(`/cards/${cardId}`, {\n      method: 'DELETE'\n    });\n  }\n  likeCard(cardId) {\n    return this._request(`/cards/${cardId}/likes`, {\n      method: 'PUT'\n    });\n  }\n  dislikeCard(cardId) {\n    return this._request(`/cards/${cardId}/likes`, {\n      method: 'DELETE'\n    });\n  }\n  toggleLikeCard(cardId, isLiked) {\n    if (isLiked) {\n      return this.likeCard(cardId);\n    } else {\n      return this.dislikeCard(cardId);\n    }\n  }\n  pushAvatar(data) {\n    return this._request(`/users/me/avatar`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n  }\n}\nconst serverConfig = {\n  url: 'https://mesto.nomoreparties.co/v1/cohort-65',\n  headers: {\n    authorization: '608096ab-91fa-4cd3-8368-f20c618391fd',\n    'Content-Type': 'application/json'\n  }\n};\nconst api = new Api(serverConfig);\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","url","headers","_generalUrl","_headers","_checkResponse","response","ok","Promise","reject","status","json","_request","endpoint","options","fetch","then","pullProfileInfo","pullCardInfo","patchProfileInfo","data","method","body","JSON","stringify","name","username","about","useractivity","pushCardInfo","link","deleteCard","cardId","likeCard","dislikeCard","toggleLikeCard","isLiked","pushAvatar","avatar","serverConfig","authorization","api"],"sources":["C:/Users/Администратор/Desktop/Study/dev/twelve-project/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ url, headers }) {\r\n    this._generalUrl = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(response) {\r\n    if (!response.ok) {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  _request(endpoint, options) {\r\n    return fetch(`${this._generalUrl}${endpoint}`, { ...options, headers: this._headers }).then(this._checkResponse);\r\n  }\r\n\r\n  pullProfileInfo() {\r\n    return this._request(`/users/me`);\r\n  }\r\n\r\n  pullCardInfo() {\r\n    return this._request(`/cards`);\r\n  }\r\n\r\n  patchProfileInfo(data) {\r\n    return this._request(`/users/me`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        name: data.username,\r\n        about: data.useractivity\r\n      })\r\n    });\r\n  }\r\n\r\n  pushCardInfo(data) {\r\n    return this._request(`/cards`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._request(`/cards/${cardId}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return this._request(`/cards/${cardId}/likes`, {\r\n      method: 'PUT'\r\n    });\r\n  }\r\n\r\n  dislikeCard(cardId) {\r\n    return this._request(`/cards/${cardId}/likes`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n\r\n  toggleLikeCard(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this.likeCard(cardId);\r\n    } else {\r\n      return this.dislikeCard(cardId);\r\n    }\r\n  }\r\n\r\n  pushAvatar(data) {\r\n    return this._request(`/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\nconst serverConfig = {\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-65',\r\n  headers: {\r\n    authorization: '608096ab-91fa-4cd3-8368-f20c618391fd',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst api = new Api(serverConfig);\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}