{"ast":null,"code":"class Authentication {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._generalUrl = url;\n    this._headers = headers;\n    this._token = null;\n  }\n  _checkResponse(response) {\n    if (!response.ok) {\n      return Promise.reject(`Ошибка: ${response.status}`);\n    }\n    return response.json();\n  }\n  _request(endpoint, headers, options) {\n    return fetch(`${this._generalUrl}${endpoint}`, {\n      ...options,\n      headers: headers\n    }).then(this._checkResponse);\n  }\n  pushRegistration(data) {\n    return this._request('/signup', this._headers, {\n      method: 'POST',\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    });\n  }\n  pushLogin(data) {\n    return this._request('/signin', this._headers, {\n      method: 'POST',\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(res => {\n      if (res.token) {\n        this.setToken(res.token);\n      }\n      return res;\n    });\n  }\n  pullDataAuth() {\n    return this._request('/users/me', {\n      ...this.headers,\n      'Authorization': `Bearer ${this._token}`\n    });\n  }\n  setToken(token) {\n    this._token = token;\n    localStorage.setItem('jwt', token);\n  }\n}\nconst serverConfig = {\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst authenticationApi = new Authentication(serverConfig);\nexport default authenticationApi;","map":{"version":3,"names":["Authentication","constructor","_ref","url","headers","_generalUrl","_headers","_token","_checkResponse","response","ok","Promise","reject","status","json","_request","endpoint","options","fetch","then","pushRegistration","data","method","body","JSON","stringify","password","email","pushLogin","res","token","setToken","pullDataAuth","localStorage","setItem","serverConfig","authenticationApi"],"sources":["C:/Users/Администратор/Desktop/Study/dev/twelve-project/mesto-react/src/utils/Authentication.js"],"sourcesContent":["class Authentication {\r\n  constructor({ url, headers}) {\r\n    this._generalUrl = url;\r\n    this._headers = headers;\r\n    this._token = null;\r\n  }\r\n\r\n  _checkResponse(response) {\r\n    if (!response.ok) {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  _request(endpoint, headers, options) {\r\n    return fetch(`${this._generalUrl}${endpoint}`, { ...options, headers: headers }).then(this._checkResponse);\r\n  }\r\n\r\n  pushRegistration(data) {\r\n    return this._request('/signup', this._headers, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        password: data.password,\r\n        email: data.email\r\n      })\r\n    });\r\n  }\r\n\r\n  pushLogin(data) {\r\n    return this._request('/signin', this._headers, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        password: data.password,\r\n        email: data.email\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (res.token) {\r\n        this.setToken(res.token);\r\n      }\r\n      return res;\r\n    })\r\n  }\r\n\r\n  pullDataAuth() {\r\n    return this._request('/users/me',\r\n    {...this.headers, 'Authorization' : `Bearer ${this._token}`});\r\n  }\r\n\r\n  setToken(token) {\r\n    this._token = token;\r\n    localStorage.setItem('jwt', token);\r\n  }\r\n\r\n}\r\n\r\nconst serverConfig = {\r\n  url: 'https://auth.nomoreparties.co',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst authenticationApi = new Authentication(serverConfig);\r\n\r\nexport default authenticationApi;\r\n"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAAAC,IAAA,EAAkB;IAAA,IAAjB;MAAEC,GAAG;MAAEC;IAAO,CAAC,GAAAF,IAAA;IACzB,IAAI,CAACG,WAAW,GAAGF,GAAG;IACtB,IAAI,CAACG,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,MAAM,GAAG,IAAI;EACpB;EAEAC,cAAcA,CAACC,QAAQ,EAAE;IACvB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,QAAQ,CAACI,MAAO,EAAC,CAAC;IACrD;IACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB;EAEAC,QAAQA,CAACC,QAAQ,EAAEZ,OAAO,EAAEa,OAAO,EAAE;IACnC,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,WAAY,GAAEW,QAAS,EAAC,EAAE;MAAE,GAAGC,OAAO;MAAEb,OAAO,EAAEA;IAAQ,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAC5G;EAEAY,gBAAgBA,CAACC,IAAI,EAAE;IACrB,OAAO,IAAI,CAACN,QAAQ,CAAC,SAAS,EAAE,IAAI,CAACT,QAAQ,EAAE;MAC7CgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBC,KAAK,EAAEN,IAAI,CAACM;MACd,CAAC;IACH,CAAC,CAAC;EACJ;EAEAC,SAASA,CAACP,IAAI,EAAE;IACd,OAAO,IAAI,CAACN,QAAQ,CAAC,SAAS,EAAE,IAAI,CAACT,QAAQ,EAAE;MAC7CgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBC,KAAK,EAAEN,IAAI,CAACM;MACd,CAAC;IACH,CAAC,CAAC,CACDR,IAAI,CAACU,GAAG,IAAI;MACX,IAAIA,GAAG,CAACC,KAAK,EAAE;QACb,IAAI,CAACC,QAAQ,CAACF,GAAG,CAACC,KAAK,CAAC;MAC1B;MACA,OAAOD,GAAG;IACZ,CAAC,CAAC;EACJ;EAEAG,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACjB,QAAQ,CAAC,WAAW,EAChC;MAAC,GAAG,IAAI,CAACX,OAAO;MAAE,eAAe,EAAI,UAAS,IAAI,CAACG,MAAO;IAAC,CAAC,CAAC;EAC/D;EAEAwB,QAAQA,CAACD,KAAK,EAAE;IACd,IAAI,CAACvB,MAAM,GAAGuB,KAAK;IACnBG,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,KAAK,CAAC;EACpC;AAEF;AAEA,MAAMK,YAAY,GAAG;EACnBhC,GAAG,EAAE,+BAA+B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC;AAED,MAAMgC,iBAAiB,GAAG,IAAIpC,cAAc,CAACmC,YAAY,CAAC;AAE1D,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}